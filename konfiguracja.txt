KOMENDA OC nie podpowiada TABem:
--------------------------------
instalując ją z TGZ nie generuje sie completion dla komendy OC. Trzeba zrobić to ręcznie:
https://access.redhat.com/solutions/3189282
i przelogować się lub:
source /etc/bash_completion.d/oc_completion
i działa :-D
lub:
oc completion -h - pokaze co zrobic ;-)

JENKINS:
=======
oc annotate sa jenkins serviceaccounts.openshift.io/oauth-redirectreference.jenkins='{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
serviceaccount/jenkins annotated
[root@bastion openshift-cd-demo]# oc get sa jenkins -o json
{
    "apiVersion": "v1",
    "imagePullSecrets": [
        {
            "name": "jenkins-dockercfg-lzjjc"
        }
    ],
    "kind": "ServiceAccount",
    "metadata": {
        "annotations": {
            "serviceaccounts.openshift.io/oauth-redirectreference.jenkins": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"jenkins\"}}"
        },
        "creationTimestamp": "2020-06-02T08:30:03Z",
        "name": "jenkins",
        "namespace": "cicd",
        "resourceVersion": "502895",
        "selfLink": "/api/v1/namespaces/cicd/serviceaccounts/jenkins",
        "uid": "4ddfb242-1b2f-4294-8e61-1f327f4e05e7"
    },
    "secrets": [
        {
            "name": "jenkins-token-cjgdr"
        },
        {
            "name": "jenkins-dockercfg-lzjjc"
        }
    ]
}

IMPORT strszej wersji MAVEN Agent 3.5:
=======================================
W OSE 4.4 jest nowy maven 4.0 z nową java 11. starsze aplikacje się nie budują bo potrzebują java 8. 
Tą wersje ma maven 3.5. Trzeba do dodać np: lokalnie do projektu ci-cd:

TRZEBA SIE ZALOGOWAC DO RH!!!
Wszystko wykonac w rojekcie openshift, inaczej import zrobi sie do bierzacego projektu!!!!

oc import-image openshift3/jenkins-agent-maven-35-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-agent-maven-35-rhel7 --confirm
UWAGA!!!
  JDK 1.8 jest tylko w konetenerach do v.:v3.11.219-1. Pozniej dalej nazywa sie maven-35 ale zawiera TYLKO JDK11

oc import-image jboss-eap-7/eap74-openjdk8-openshift-rhel7:7.4.4-2.1650895313 --from=registry.redhat.io/jboss-eap-7/eap74-openjdk8-openshift-rhel7:7.4.4-2.1650895313 --confirm
oc import-image openshift4/ose-cli --from=registry.redhat.io/openshift4/ose-cli --confirm



NIE MA DEPLOY na STAGE:
=======================
Przy promocji próbuje zroibic rollout:latest ale nie sprawdzają, że jeszcze nic tam nie było nigdy (jak puszczamy pierwszy raz).
Następne buildy po tej proceduże będą się promowały bez problemu.
Trzeba stworzyć IS, TRIGGER i Route:

oc new-app --name=tasks --image-stream=tasks:stage -n stage
oc get all -n stage 
oc set triggers dc -l app=tasks --containers=tasks --from-image=tasks:stage --manual -n stage

KONFIGURACJA NOWYCH SRODOWISK:
==============================
Wykorzystac moza 2 pliki:
1) cicd-template.yaml - jenkins-slave/maven i Jboss są przerobione na RedHatowe.
  Działa jako Ephemeral od strzału
  oc new-app -n per-cicd -f cicd-template.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true
2) cicd-template-NoQUAY-PERSIST.yaml - jenkins i reszta jak wyżej, ale dodatkowo:
 a) wywalony jest deploy QUAY 
 b)(prawie) działa persystencja. Pojedyncze tamplatki działają w jednym pliku nie chcą...
   oc new-app -n per-cicd -f cicd-template-NoQUAY-PERSIST.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=false
   oc new-app -n per-cicd -f cicd-template-NoQUAY-PERSIST.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true
3) cicd-clear.sh wywala wszystko z rojektu per-cicd
4) PVC/PV trzeba ręcznie wywalić. PV kreuje plik cicd-pv.yaml

Reszta normalnie jak w repo GIT:
--------------------------------
Trzeba miec zassane od RH: jenkins-agent-maven w wersji 3.x nie 4.x. Najlepiej do projektu openshift
Trzeba miec zassane od RH: ose-cli. Najlepiej do projektu openshift. Oryginalnie tez jest cli w projekcie openshift i dziala (ale IS wskazuje na quay nie na RH)
oc import-image openshift4/ose-cli --from=registry.redhat.io/openshift4/ose-cli --confirm

https://github.com/siamaksade/openshift-cd-demo
1) powołujemy nowe rojekty np: per-cicd, per-dev, per-stage
2) nadajemy uprawnienia z per-cicd do pozostałych projektow:
   oc policy add-role-to-group edit system:serviceaccounts:per-cicd -n per-dev
   oc policy add-role-to-group edit system:serviceaccounts:per-cicd -n per-stage
 a) uprawnienie edit dla JENKINSa w per-dev by mógł zrobić deploy aplikacji. Inaczej pipeline sie sypie:
   oc policy add-role-to-user edit system:serviceaccounts:per-cicd:jenkins -n per-dev
3) odpalamy template:
oc new-app -n per-cicd -f cicd-template.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true
czyscimy
oc process -n per-cicd -f cicd-template.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true|oc delete -f -

UWAGA!!!
--------
Moje obrazy sa z repo w GitLab. Trzeba dodać secrety by sie do nich dostać!!!
Ops poniżej w punkcie: Dostep do pull-owania obrazow z GitLAB.
Skladnia w pliku projektu: gitlab-secret.txt

Przywracanie RH projektu w cicd:
--------------------------------
WYWALAMY wszystko z CICD: 
oc delete all --all
oc delete rolebinding default_admin -n cicd
oc delete cm gogs-config jenkins-slaves -n cicd
oc delete sa gogs jenkins -n  cicd
oc delete secrets sonar-ldap-bind-dn sonar-pgsql -n cicd
ODPALAMY od ZERA:
oc new-app jenkins-ephemeral -n cicd 
oc new-app -n cicd -f cicd-template-EPHEMERAL-withRH.yaml --param DEV_PROJECT=dev --param STAGE_PROJECT=stage --param EPHEMERAL=true

Przywracanie logowanie do GoGs:
-------------------------------
1) przywracanie logowania:
kilka razy puścić (chyba ze od razu wskoczy 200 - sukces): 
curl -o /tmp/curl.log -sL --post302 -w "%{http_code}" http://gogs-per-cicd.apps.ose4.pk.test/user/sign_up --form user_name=gogs --form password=gogs --form retype=gogs --form email=admin@gogs.com
2) przywracanie repo:
puszczamy az bedzie kod: 201 - repo sie sklonowalo:
tworzymy plik data.json z namiarami na repo:
cat <<EOF > /tmp/data.json
            {
              "clone_addr": "https://oauth2:dFEa27mG2DqzJXRo1CsG@gitlab.com/przemyslaw.kuznicki/cicd-tasks-app.git",
              "uid": 1,
              "repo_name": "openshift-tasks"
            }
            EOF
puszczamy curl na te dane i naszego gogsa:
curl -o /tmp/curl.log -sL -w "%{http_code}" -H "Content-Type: application/json" -u gogs:gogs -X POST http://gogs-per-cicd.apps.ose4.pk.test/api/v1/repos/migrate -d @/tmp/data.json


LOGOWANIE DO redhat.io/itp:
===========================
RPM podman znajduje sie w repo-extras. Trzeba je wlaczyc:
subscription-manager repos --enable "rhel-*-optional-rpms" --enable "rhel-*-extras-rpms"

Najlepiej tam gdzie mamy podmana:

podman login -u '5883743|PrzemyslawKuznickiLP' -p 'eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJiNjRiMGMxOTU2MjI0ZDVjYjlhMWE4MTE4MGYwN2RmNiJ9.SHjoJbAK4USZozMg9NAnXOpvAGV9DnO3O1b0MxfqT2YYakIkTn0Lm34hR_4OcDSDX5FN9oXjZnMXapFRokj0yjCUH8QMPNKOln3EI-zb4w_0crww7UK-7FXGSNRsyQkaTv5qA2rhRzh4S_67Ew91GOvm4_dzLrvGDawDkASdnhv70v5ts3YC2aF-Rv-yVmANsLWpGyYJub2-outFcRM4FSDD-IL_X7-HnbvB9KMgQSNFbR5UtG9ugDwWhEmNcHImY2dbRKuHUXXvAv7NYoQl1u6SQmHzDFbRAmbSL127HIONJIM834VgC2uHdHg-0erS8CTLU5VxbGuowS7-Tm5fgAPHWoC6SzyXS4SK1dgHG4UwiQAsOrHb7b0YvJa3i9LA33fl0WX3gNWVruYaeIiJXyIBn-1i5M-UG0seryJRCdmF2ZIAbaGI8BNoLVMTK1wme1NZdrgaYhxNJOjFEZ8hqm3_9hPaP1T5CfHgf4KG_aQ7EXHnHayXdVEhrd4venshVIJIJQDnZ09hy-c8gv-TgbAtw3UT01Mims9Kk_2YMCWQV_4t3ShcSgMqgso1EgfgrNy8BjHZ4FEEF3oYGlMvaZVFH3ausfEsFSYp52lDZt473G8UyaAdS2O6MPKHO5tvkfTRsx-dqB-hRlI3Qu2s9aTtLS54uel6UYcLIYz2Hbc' registry.redhat.io

i mozemy zasysac np:
oc import-image rhel8/skopeo --from=registry.redhat.io/rhel8/skopeo --confirm
UWAGA!!! skopeo z RH nie startuje!!! Od goscia z reo docker.io dziala.

Konfiguracja repo do przeszukiwan jest w pliku:
/etc/containers/registries.conf
dzieki temu mozna napisac:
podman pull gogs/gogs
a on przeszuka redhat.io i reszte az znajdzie w docker.io :-)

Logowanie do lokalnego repo (na moim OSE):
------------------------------------------
https://access.redhat.com/solutions/5177301
https://docs.openshift.com/container-platform/4.4/registry/securing-exposing-registry.html
Trzeba wystawic rute do rejestru by byl dostepy z zewnatrz:
oc patch configs.imageregistry.operator.openshift.io/cluster --patch '{"spec":{"defaultRoute":true}}' --type=merge
Powinna sie pokazac ruta: default-route-openshift-image-registry.apps.ose4.pk.test
Mozna sie teraz zalogowac:
[root@bastion POKAZ]# HOST=$(oc get route default-route -n openshift-image-registry --template='{{ .spec.host }}')
[root@bastion POKAZ]# podman login -u $(oc whoami) -p $(oc whoami -t) --tls-verify=false $HOST [--tls-verify=false]
lub (haslo z TOKENU, nie haslo zwykle): 
podman login -u przem https://default-route-openshift-image-registry.apps.ose4.pk.test --tls-verify=false

Pozna cos push'nac:
podman push default-route-openshift-image-registry.apps.ose4.pk.test/super-mario/mario-crossover:latest [--tls-verify=false]

PERSYSTENCJA do CI-CD:
======================
Nie podnosi się postgreSQL :-( w gogs i sonarQ

oc create -f cicd-pv.yaml
oc process cicd-pv|oc create -f -
oc new-app -n per-cicd -f cicd-template-NoQUAY-PERSIST.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=false

GitLAB:
=======
Aktualny TOKEN do przegladania repo: private_token=dFEa27mG2DqzJXRo1CsG

KLONOWANIE reo z tokenem:
---------
https://oauth2:dFEa27mG2DqzJXRo1CsG@gitlab.com/przemyslaw.kuznicki/cicd-tasks-app.git

Generujemy RAW do pliku by wiedzieć jaki jest URL.
Sprawdzamy curl'em:
curl 'https://gitlab.com/api/v4/projects/przemyslaw.kuznicki%2fcicd-jenkins/repository/files/cicd-pv.yaml/raw?ref=master&private_token=dFEa27mG2DqzJXRo1CsG'
lub 
curl --header 'PRIVATE-TOKEN: dFEa27mG2DqzJXRo1CsG' https://gitlab.com/api/v4/projects/przemyslaw.kuznicki%2fcicd-jenkins/repository/files/cicd-pv.yaml/raw?ref=master

Jesli bedzie cos w podkatalogu to:
---------------------------------
https://gitlab.com/api/v4/projects/REPO/repository/files/PLIK/raw?ref=master&private_token=xxx

tam gdzie argument ma '/' zamieniasz go na '%2f'
a więc:
REPO = przemyslaw.kuznicki%2fcicd-jenkins
PLIK = nexus%2fnexus3-template-ephemeral.yaml
curl 'https://gitlab.com/api/v4/projects/przemyslaw.kuznicki%2Fcicd-jenkins/repository/files/nexus%2Fnexus-functions/raw?ref=master&private_token=dFEa27mG2DqzJXRo1CsG'
curl 'https://gitlab.com/api/v4/projects/przemyslaw.kuznicki%2Fcicd-jenkins/repository/files/nexus%2Fnexus3-template-ephemeral.yaml/raw?ref=master&private_token=dFEa27mG2DqzJXRo1CsG'

Repo DOCKER w GitLAB:
---------------------
podman login registry.gitlab.com
przemyslaw.kuznicki / A..@

lub tokenem:
podman login -u przemyslaw.kuznicki -p ZGNviZ7ivesfHMN83tYW registry.gitlab.com
podman pull registry.gitlab.com/przemyslaw.kuznicki/cicd-jenkins/images/nexus3:3.13.0

Tagi:
podman tag docker.io/sonatype/nexus3:3.13.0 registry.gitlab.com/przemyslaw.kuznicki/cicd-jenkins/images/nexus3:3.13.0
podman push registry.gitlab.com/przemyslaw.kuznicki/cicd-jenkins/images/nexus3:3.13.0

Dostep do pull-owania obrazow z GitLAB:
---------------------------------------
https://access.redhat.com/solutions/4236661
Nalezy utworzyc dwa secrety dla gitlab'a: gitlab-reg-secret   gitlab-secret
Haslo musi byc TOKENem z GitLab nie plaintext
$ oc create secret docker-registry gitlab-reg-secret \
    --docker-server=registry.gitlab.com \
    --docker-username=myuser \
    --docker-password=mypasswd \
    --docker-email=myemail@provider.com

$ oc create secret docker-registry gitlab-secret \
    --docker-server=gitlab.com \
    --docker-username=myuser \
    --docker-password=mypasswd \
    --docker-email=myemail@provider.com

$ oc secrets link default gitlab-reg-secret --for=pull


UPRAWNIENIA do czytania obrazow z innego REPO:
==============================================
oc policy add-role-to-user system:image-puller system:serviceaccounts:per-cicd:default -n cicd

CZYSZCZENIE PO TEMPLATCE:
=========================
oc process -f 'https://gitlab.com/api/v4/projects/przemyslaw.kuznicki%2Fcicd-jenkins/repository/files/gogs%2Fgogs-template-ephemeral.yaml/raw?ref=master&private_token=dFEa27mG2DqzJXRo1CsG' --param HOSTNAME=gogs-per-cicd.apps.ose4.pk.test | oc delete -f -

oc new-app -n per-cicd -f cicd-template.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true
oc process -n per-cicd -f cicd-template.yaml --param DEV_PROJECT=per-dev --param STAGE_PROJECT=per-stage --param EPHEMERAL=true|oc delete -f -

SPRAWDZANIE API K8s-a
=====================
Jesli pojawi sie blad np:

To musimy sprawdzic jaki jest poprawny wpis w API. Od K8s 1.16 nie ma juz extension/v1beta1 jest apps/v1
./kubectl api-resources | grep deployment
./kubectl api-resources | grep network

PROBLEM z dostepen do LOGOW, EXEC itp
=====================================
https://access.redhat.com/solutions/4307511

